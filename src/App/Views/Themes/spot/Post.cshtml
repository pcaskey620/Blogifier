@model PostModel
<!DOCTYPE html>
<html lang="en">
<head>
    <partial name="~/Views/Themes/spot/_Shared/_Head.cshtml" />
</head>
<body class="@ViewData["bodyClass"]">
    <!--[if lt IE 10]>
    <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>
    <![endif]-->
    <partial name="~/Views/Themes/spot/_Shared/_Header.cshtml" />



    <div class="page-content">
        <div class="container">
            <div class="row">


                <div class="col-sm-8">

                    <article class="post">
                        <div class="post-cover">


                            <img src="@Model.Blog.Cover" alt="@Model.Post.Title">

                        </div>
                        <div class="post-body">
                            <ul class="post-categories">
                                @if (!string.IsNullOrEmpty(Model.Post.Categories))
                                            {
                                            var cats = Model.Post.Categories.Split(',');

                                            foreach (var cat in cats)
                                            {
                                <li><a href="~/categories/@cat">@cat</a></li>
                                            }
                                            }
                            </ul>
                            <h2 class="post-title">@Model.Post.Title</h2>
                            <div class="post-meta">
                                By <a class="post-meta-author" href="~/authors/@Model.Post.Author.AppUserName">@Model.Post.Author.DisplayName</a> On
                                <time class="post-meta-time">@string.Format("{0:MMM d, yyyy}", Model.Post.Published)</time>
                            </div>

                            <div class="post-description">@Html.Raw(Model.Post.Content)</div>


                        </div>
                    </article>
                    @if (Model.Older != null || Model.Newer != null)
                {
                    <ul class="pagination justify-content-between">
                        @if (Model.Older != null)
                        {
                        <li class="item item-prev">
                            <a class="item-link" href="~/posts/@Model.Older.Slug" title="@Model.Older.Title">
                                Previous Post
                            </a>
                        </li>
                        }
                        @if (Model.Newer != null)
                        {
                        <li class="item item-next">
                            <a class="item-link" href="~/posts/@Model.Newer.Slug" title="@Model.Newer.Title">
                                Next Post
                            </a>
                        </li>
                        }
                    </ul>
                }




                </div>
                <aside class="col-sm-4 pl-5">
                    <div class="widget widget-social">
                        <h4 class="widget-title"><span>Follow Us</span></h4>
                        <div class="widget-body">
                            @*@await Component.InvokeAsync("HtmlBlock", new { theme = "spot", widget = "Social Buttons" })*@
                            <ul>
                                <li><a class="widget-social-fb" target="_blank" href="https://facebook.com/blogifierdotnet"><i class="fa fa-facebook"></i> <span>Facebook</span></a></li>
                                <li><a class="widget-social-tw" target="_blank" href="https://twitter.com/blogifierdotnet"><i class="fa fa-twitter"></i> <span>Twitter</span></a></li>
                                <li><a class="widget-social-in" target="_blank" href="https://instagram.com/blogifierdotnet"><i class="fa fa-instagram"></i> <span>Instagram</span></a></li>
                                <li><a class="widget-social-rss" target="_blank" href="/feed/rss"><i class="fa fa-rss"></i> <span>Subscribe</span></a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="widget widget-posts">
                        <h4 class="widget-title"><i class="widget-icon fa fa-file-text-o"></i> <span>Recent Posts</span></h4>
                        <div class="widget-body">
                            <ul class="widget-posts-list">
                                @await Component.InvokeAsync("PostList", new { theme = "spot", widget = "Recent Posts" })
                            </ul>
                        </div>
                    </div>
                    <div class="widget widget-categories">
                        <h4 class="widget-title"><i class="widget-icon fa fa-folder"></i> <span>Categories</span></h4>
                        <div class="widget-body">
                            <ul>
                                @await Component.InvokeAsync("Categories", new { theme = "spot", widget = "Categories" })
                            </ul>
                        </div>
                    </div>
                    <div class="widget widget-tags">
                        <h4 class="widget-title"><i class="widget-icon fa fa-tags"></i> <span>Tags</span></h4>
                        <div class="widget-body">
                            <ul class="clearfix">
                                @await Component.InvokeAsync("Categories", new { theme = "spot", widget = "Tags" })
                            </ul>
                        </div>
                    </div>
                    <div class="widget widget-newsletter">
                        <h4 class="widget-title"><i class="widget-icon fa fa-telegram"></i><span>Newsletter</span></h4>
                        <div class="widget-body">
                            <ul>
                                @await Component.InvokeAsync("Newsletter", new { theme = "spot", widget = "Newsletter" })
                            </ul>
                        </div>
                    </div>
                </aside>
            </div>
        </div>
    </div>




    <partial name="~/Views/Themes/spot/_Shared/_Footer.cshtml" />
</body>
</html>
