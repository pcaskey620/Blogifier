@model PostModel
<!DOCTYPE html>
<html lang="en">
<head>
    <partial name="~/Views/Themes/moments/_Shared/_Head.cshtml" />
</head>
<body class="@ViewData["bodyClass"]">
    <!--[if lt IE 10]>
    <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>
    <![endif]-->
    <partial name="~/Views/Themes/moments/_Shared/_Header.cshtml" />



    <div class="page-content">
        <div class="container">
            <div class="row">
                <aside class="col-sm-3">

                    <div class="widget widget-posts">
                        <h4 class="widget-title"><i class="widget-icon fa fa-file-text-o"></i> <span>Recent Posts</span></h4>
                        <div class="widget-body">
                            <ul class="widget-posts-list">
                                @await Component.InvokeAsync("PostList", new { theme = "moments", widget = "Recent Posts" })
                            </ul>
                        </div>
                    </div>
                    <div class="widget widget-categories">
                        <h4 class="widget-title"><i class="widget-icon fa fa-folder"></i> <span>Categories</span></h4>
                        <div class="widget-body">
                            <ul>
                                @await Component.InvokeAsync("Categories", new { theme = "moments", widget = "Categories" })
                            </ul>
                        </div>
                    </div>
                    <div class="widget widget-tags">
                        <h4 class="widget-title"><i class="widget-icon fa fa-tags"></i> <span>Tags</span></h4>
                        <div class="widget-body">
                            <ul class="clearfix">
                                @await Component.InvokeAsync("Categories", new { theme = "moments", widget = "Tags" })
                            </ul>
                        </div>
                    </div>
                </aside>
                <div class="col-sm-9 pl-5">
                    <article class="post-single">

                        <section class="container">
                            <div class=" post-body">
                                <header class="post-header">
                                    <time class="post-meta-time">@string.Format("{0:MMM d, yyyy}", Model.Post.Published)</time>
                                    <h2 class="post-title">@Model.Post.Title</h2>
                                    <img src="@Model.Blog.Cover" alt="@Model.Post.Title" class="post-cover" />
                                    <div class="d-flex mb-5">
                                        <div class="post-meta">
                                            <a href="~/authors/@Model.Post.Author.AppUserName">
                                                <img class="post-meta-img" src="~/@Model.Post.Author.Avatar" alt="@Model.Post.Author.DisplayName" />
                                                <span class="post-meta-author">@Model.Post.Author.DisplayName</span>
                                            </a>
                                        </div>
                                        <ul class="post-categories ml-auto">
                                            @if (!string.IsNullOrEmpty(Model.Post.Categories))
                                            {
                                            var cats = Model.Post.Categories.Split(',');

                                            foreach (var cat in cats)
                                            {
                                            <li><a href="~/categories/@cat">@cat</a></li>
                                            }
                                            }
                                        </ul>
                                    </div>
                                
                                </header>
                                <div class="post-content">
                                    @Html.Raw(Model.Post.Content)
                                </div>

                                @if (Model.Older != null || Model.Newer != null)
                {
                                <ul class="pagination justify-content-between">
                                    @if (Model.Older != null)
                        {
                                    <li class="item item-prev">
                                        <a class="item-link" href="~/posts/@Model.Older.Slug" title="@Model.Older.Title">
                                            Previous Post
                                        </a>
                                    </li>
                        }
                                    @if (Model.Newer != null)
                        {
                                    <li class="item item-next">
                                        <a class="item-link" href="~/posts/@Model.Newer.Slug" title="@Model.Newer.Title">
                                            Next Post
                                        </a>
                                    </li>
                        }
                                </ul>
                }
                            </div>
                        </section>
                    </article>
                </div>
            </div>
        </div>
    </div>




    <partial name="~/Views/Themes/moments/_Shared/_Footer.cshtml" />
</body>
</html>
